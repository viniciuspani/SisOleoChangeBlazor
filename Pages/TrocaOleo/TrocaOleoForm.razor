<EditForm Model="@trocaOleo" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <label form="veiculo">Veiculo</label>
                <select @onchange="VeiculoSelectionChanged" class="form-control ">
                    @if (veiculos != null)
                    {
                        @foreach (var veiculo in veiculos)
                        {
                            @*A propriedade selected retorna um boleano, que exibe como primeira opcao oque foi selecionado
                    para a tag select.*@
                            <option value="@veiculo.VeiculoId" selected="@(veiculo.VeiculoId == trocaOleo.VeiculoId ? true : false)">
                                @veiculo.Modelo.ToUpper()
                            </option>
                        }
                    }
                </select>
            </div>
            <div class="form-group mt-1">
                <label form="oleo">Oleo</label>
                <select @onchange="OleoSelectionChanged" class="form-control">
                    @if (oleos != null)
                    {
                        @foreach (var oleo in oleos)
                        {
                            <option value="@oleo.OleoId" selected="@(oleo.OleoId == trocaOleo.OleoId ? true : false)">
                                @oleo.Nome.ToUpper()
                            </option>
                        }
                    }
                </select>
            </div>
            <div class="form-group mt-1">
                <label form="filtro">Filtro</label>
                <select @onchange="FiltroSelectionChanged" class="form-control text-uppercase">
                    @if (filtros != null)
                    {
                        @foreach (var filtro in filtros)
                        {
                            <option value="@filtro.FiltroId" selected="@(filtro.FiltroId == trocaOleo.FiltroId ? true : false)">
                                @filtro.Nome.ToUpper()

                            </option>
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <label form="kmAtual">Km Atual: </label>
                <div>
                    <InputNumber @bind-Value="trocaOleo.KmAtual" class="form-control" disable />
                    <ValidationMessage For="@(()=> trocaOleo.KmAtual)" />
                </div>
            </div>
            <div class="form-group">
                <label form="kmProximaTroca">Km Proxima Troca: </label>
                <div>
                    <InputNumber @bind-Value="trocaOleo.KmProximaTroca" class="form-control " />
                    <ValidationMessage For="@(()=> trocaOleo.KmProximaTroca)" />
                </div>
            </div>
            <div class="form-group">
                <label form="quantidadeOleo">Quantidade de Oleo Troca: </label>
                <div>
                    <InputNumber @bind-Value="trocaOleo.QuantidadeOleo" class="form-control" />
                    <ValidationMessage For="@(()=> trocaOleo.QuantidadeOleo)" />
                </div>
            </div>
            <div class="form-group">
                <label form="dataTrocaOleo">Data da troca de oleo: </label>
                <div>
                    <InputDate @bind-Value="trocaOleo.DataTroca" class="form-control" />
                    <ValidationMessage For="@(()=> trocaOleo.DataTroca)" />
                </div>
            </div>
            <div class="form-group">
                <label form="dataProximaTrocaOleo">Data da proxima troca de oleo: </label>
                <div>
                    <InputDate @bind-Value="trocaOleo.DataProximaTroca" class="form-control" />
                    <ValidationMessage For="@(()=> trocaOleo.DataProximaTroca)" />
                </div>
            </div>
            <br />
            <div class="row mt-6">
                <div class="col-md-4">
                    <button type="submit" class="btn btn-success">
                        @btnTextSubmit
                    </button>
                    <button type="button" class="btn btn-danger"
                    @onclick="@Cancela">
                        @btnTextCancelar
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Inject]
    public NavigationManager navigation { get; set; }

    [Parameter]
    public TrocaOleo trocaOleo { get; set; }

    [Parameter]
    public List<Veiculo> veiculos { get; set; }

    [Parameter]
    public List<Oleo> oleos { get; set; }

    [Parameter]
    public List<Filtro> filtros { get; set; }

    [Parameter]
    public string btnTextSubmit { get; set; } = "Salvar";

    [Parameter]
    public string btnTextCancelar { get; set; } = "Cancelar";

    [Parameter]
    public EventCallback Cancela { get; set; }

    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

   private void VeiculoSelectionChanged(ChangeEventArgs e)
    {
        trocaOleo.VeiculoId = Convert.ToInt32(e.Value.ToString());
    }

    private void OleoSelectionChanged(ChangeEventArgs e)
    {
        trocaOleo.OleoId = Convert.ToInt32(e.Value.ToString());
    }

    private void FiltroSelectionChanged(ChangeEventArgs e)
    {
        trocaOleo.FiltroId = Convert.ToInt32(e.Value.ToString());
    }
}
